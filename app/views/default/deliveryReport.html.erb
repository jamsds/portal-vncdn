<div class="portal__main-heading">
  <span class="btn btn-default btn-sm ml-2">
    <a href="<%= delivery_url %>" class="back_ic"><svg xmlns="http://www.w3.org/2000/svg" width="18" height="12" viewBox="0 0 18 12"><path d="M353.6,392.8v2H339.4l3.6,3.6-1.4,1.4-6-6,6-6,1.4,1.4-3.6,3.6Z" transform="translate(-335.6 -387.8)" fill="#f68100"/></svg></a>
  </span>
</div>
<div class="portal__main-left">
	<div class="panel">
		<div class="panel__list">
			panel.delivery.report.list
		</div>
	</div>
</div>
<div class="portal__main-center primary">
	<div class="dashboard">
		<div class="dashboard__container">
			<% if current_user.phone.nil? %>
			<div class="dashboard__container-message">
				dashboard.container.message
			</div>
			<% end %>
			<div class="dashboard__container-card clearfix">
				<div class="dashboard__container-table">
					<div class="dashboard__container-table-select clearfix">
						<a href="<%= delivery_url %>/<%= params[:propertyId] %>/<%= params[:type] %>" class="dashboard__container-table-select-item">Details</a>
						<a href="<%= request.fullpath %>" class="dashboard__container-table-select-item active">Reports</a>
						<a href="<%= delivery_url %>/<%= params[:propertyId] %>/<%= params[:type] %>/logs?domain=<%= params[:domain] %>" class="dashboard__container-table-select-item">Logs</a>
					</div>
					<div class="dashboard__container-card mt-3">
						<div class="dashboard__container-card-item">
							<div id="bandwidthUsage" style="width:100%; height:300px;"></div>
							<div class="bandwidthUsageMax p-1 mt-3">
								<div id="bandwidthMaxAvg" style="width:100%; height:150px;"></div>
							</div>
						</div>
						<div class="dashboard__container-card-item">
							<div id="requestOrigin" style="width:100%; height:300px;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	function beautifyDateTime(param) {
		return moment(param).format("HH:mm");
	}

	function formatHitRateUnit(param) {
    return param + '%';
  }

  function formatRequest(param) {
    return param;
  }

	function formatVolumeUnit(param) {
    var volumeUnit = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB", "BB", "NB", "DB", "CB", "XB"];
    var i = 0;

    while (param > 1000) {
      param = param / 1000;
      ++i;
    }
    param = (Math.round(param * 100) / 100).toFixed(2) + " " + volumeUnit[i];
    return param;
  }

  function formatBandwidthUnit(param) {
    var unit = ["bps", "Kbps", "Mbps", "Gbps", "Tbps", "Pbps", "Ebps", "Zbps", "Ybps", "Bbps", "Nbps", "Dbps", "Cbps", "Xbps"];

    var i = 0;
    while (param > 1000) {
      param = param / 1000;
      ++i;
    }
    param = (Math.round(param * 100) / 100).toFixed(2) + " " + unit[i];
    return param;
  }

  var bandwidthUsageChart = echarts.init(document.getElementById('bandwidthUsage'));
  var option = {
		tooltip: {
			trigger: 'axis',
      formatter: function (params) {
				let bandwidth = formatVolumeUnit(params[0].data);
				let traffic = formatVolumeUnit(params[1].data);
				return '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#f1f1f1;"></span>Traffic: '+bandwidth+'<br/><span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#f68100;"></span>Bandwidth: '+traffic;
			}
		},
    legend: {
      data:['Bandwidth','Traffic']
    },
    xAxis: {
      type: 'category',
      boundaryGap: false,
      data: [
      	<% @timestamp.each do |time| %>
      		"<%= time %>",
      	<% end %>
      ],
      axisLabel: {
      	formatter: function (value, index) {
          return beautifyDateTime(value);
        }
      }
    },
    grid: {
    	left: '2%',
      right: '2%',
      bottom: '20px'
    },
    yAxis: {
    	show: false,
    	type: 'value',
      axisLabel: {
      	formatter: function (value, index) {
          return formatBandwidthUnit(value);
        }
      }
    },
    color: [
    	"#e1e1e1","#f68100"
    ],
    toolbox: {
      show : true,
      feature : {
        saveAsImage : {
        	show: true,
        	title: ' ',
        }
      }
    },
    series: [
    	{
        name:'Traffic',
        type:'line',
        itemStyle: {
	      	normal: {
	      		areaStyle: {
	      			type: 'default'
	      		}
	      	}
	      },
        stack: 'Traffic',
        data:[
        	<% @trafficValue.each do |value| %>
        		<%= value %>,
        	<% end %>
        ]
      },
    	{
        name:'Bandwidth',
        type:'line',
        stack: 'Bandwidth',
        data:[
        	<% @bandwidthValue.each do |value| %>
        		<%= value %>,
        	<% end %>
        ]
      }
    ]
  };
  bandwidthUsageChart.setOption(option);

  var bandwidthMaxAvgChart = echarts.init(document.getElementById('bandwidthMaxAvg'));
  var option = {
    title: {
      text: 'Max/Average Bandwidth Ratio'
    },
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        type: 'shadow'
      },
      formatter: function (params) {
      	let bandwidth = formatVolumeUnit(params[0].data);
				let traffic = formatVolumeUnit(params[1].data);
				return '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#f68100;"></span>Max Bandwidth: '+bandwidth+'<br/><span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#e1e1e1;"></span>Avg Bandwidth: '+traffic+''
      }
    },
    legend: {
      data: ['Max Bandwidth', 'Avg Bandwidth']
    },
    color: [
    	"#f68100","#e1e1e1"
    ],
    grid: {
      left: '2%',
      right: '5	%',
      bottom: '20px',
      containLabel: true
    },
    xAxis: {
      type: 'value',
      boundaryGap: [0, 0.01],
      axisLabel: {
      	formatter: function (value, index) {
          return formatBandwidthUnit(value);
        }
      }
    },
    yAxis: {
      type: 'category',
      data: ['Max/Average Bandwidth Ratio']
    },
    series: [
      {
        name: 'Max Bandwidth',
        type: 'bar',
        data: [<%= @maxBandwidth %>]
      },
      {
        name: 'Avg Bandwidth',
        type: 'bar',
        data: [<%= @avgBandwidth %>]
      }
    ]
	};
	bandwidthMaxAvgChart.setOption(option);

  var requestOriginChart = echarts.init(document.getElementById('requestOrigin'));
  var option = {
  	tooltip: {
	  	trigger: 'axis',
	  	formatter: function (params) {
        return formatRequest(params[0].data);
      }
	  },
	  legend: {
      data:['Request Origin']
    },
    grid: {
    	left: '2%',
      right: '2%',
      bottom: '20px'
    },
    xAxis: {
    	type: 'category',
      boundaryGap : false,
      data: [
      	<% @timestamp.each do |time| %>
      		"<%= time %>",
      	<% end %>
      ],
      axisLabel: {
      	formatter: function (value, index) {
          return beautifyDateTime(value);
        }
      }
    },
    yAxis: {
    	show: false,
    	type: 'value',
      axisLabel: {
        formatter: function (value, index) {
          return formatHitRateUnit(value);
        }
      }
    },
    color: [
    	'#f68100'
    ],
    toolbox: {
      show : true,
      feature : {
        saveAsImage : {
        	show: true,
        	title: ' ',
        }
      }
    },
    series: [{
      name: 'Request Origin',
      type: 'line',
      data:[
      	<% @requestValue.each do |value| %>
      		<%= value %>,
      	<% end %>
      ]
    }]
  };
  requestOriginChart.setOption(option);
</script>